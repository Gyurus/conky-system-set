conky.config = {
  background = true,
  update_interval = 1,
  double_buffer = true,
  no_buffers = true,
  cpu_avg_samples = 2,
  net_avg_samples = 2,
  own_window = true,
  own_window_type = 'desktop',
  own_window_transparent = true,
  own_window_argb_visual = true,
  own_window_argb_value = 160,
  draw_shades = false,
  draw_outline = false,
  draw_borders = true,
  draw_graph_borders = true,
  use_xft = true,
  font = 'Roboto Mono:size=9',
  xftalpha = 0.9,
  alignment = 'top_right',
  gap_x = 30,
  gap_y = 30,
  xinerama_head = @@MONITOR@@,
  minimum_width = 320,
  maximum_width = 320,
  minimum_height = 600,
  default_color = 'white',
  color1 = '#00c0ff',
  color2 = '#ffff66',
  color3 = '#ff4c4c'
};

conky.text = [[
${font Roboto Mono:bold:size=10}${alignc}${color1}Network Monitor${color}${font}
${hr 1}
Interface: @@IFACE@@ ${alignr}${execpi 300 bash -c 'curl -s "https://ipinfo.io/ip" || echo "IP unavailable"'}
Up: ${upspeed @@IFACE@@} ${alignr}Down: ${downspeed @@IFACE@@}
${upspeedgraph @@IFACE@@ 20,140 FF6600 FF3300} ${alignr}${downspeedgraph @@IFACE@@ 20,140 33ccff 0099cc}
Sent: ${totalup @@IFACE@@} ${alignr}Received: ${totaldown @@IFACE@@}
${hr 1}
${color1}Wi-Fi Info${color}
${if_existing /proc/net/wireless}SSID: ${exec iw dev | awk '/ssid/ {print $2; exit}'} ${alignr}Signal: ${exec awk 'NR==3 {print int(($3 / 70) * 100)}' /proc/net/wireless}%${endif}
Host: $alignr$nodename
Uptime: $alignr$uptime
Kernel: $alignr$kernel
${color1}Temperatures${color}
CPU: ${execi 10 sensors | awk '/Package id 0:/ {print $4}' | tr -d '+' || echo "N/A"} ${alignr}GPU: ${execi 30 bash -c '
  # Try NVIDIA GPU temperature first
  if command -v nvidia-smi >/dev/null 2>&1; then
    temp=$(nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits 2>/dev/null | head -1)
    if [ -n "$temp" ] && [ "$temp" != "" ] && [ "$temp" -gt 0 ] 2>/dev/null; then
      echo "${temp}째C"
      exit 0
    fi
  fi
  # Try AMD GPU temperature
  if command -v radeontop >/dev/null 2>&1; then
    temp=$(timeout 3 radeontop -d - -l 1 2>/dev/null | grep -o "gpu [0-9]*째C" | awk '{print $2}')
    if [ -n "$temp" ]; then
      echo "$temp"
      exit 0
    fi
  fi
  # Try Intel GPU via hwmon interfaces
  for hwmon in /sys/class/hwmon/hwmon*/name; do
    if [ -f "$hwmon" ]; then
      name=$(cat "$hwmon" 2>/dev/null)
      case "$name" in
        *i915*|*intel*)
          temp_file=$(dirname "$hwmon")/temp1_input
          if [ -f "$temp_file" ]; then
            temp=$(awk '{printf "%.0f", $1/1000}' "$temp_file" 2>/dev/null)
            if [ -n "$temp" ] && [ "$temp" -gt 0 ] && [ "$temp" -lt 150 ] 2>/dev/null; then
              echo "${temp}째C"
              exit 0
            fi
          fi
          ;;
      esac
    fi
  done
  # If no dedicated GPU temp found, try to find hottest thermal zone as approximation
  highest_temp=0
  for thermal in /sys/class/thermal/thermal_zone*/temp; do
    if [ -f "$thermal" ]; then
      temp=$(awk '{printf "%.0f", $1/1000}' "$thermal" 2>/dev/null)
      if [ -n "$temp" ] && [ "$temp" -gt "$highest_temp" ] && [ "$temp" -lt 150 ] 2>/dev/null; then
        highest_temp="$temp"
      fi
    fi
  done
  if [ "$highest_temp" -gt 0 ]; then
    echo "${highest_temp}째C (thermal)"
  else
    echo "N/A"
  fi
'}
${cpugraph 20,320 ff6600 ffff00}
${color1}CPU/RAM${color}
CPU: ${cpu}% ${cpubar 6}
RAM: $mem / $memmax ($memperc%) ${membar 6}
Swap: $swap / $swapmax ($swapperc%) ${swapbar 6}
${hr 1}
${color1}Process Info${color}
Processes: $processes ${alignr}Running: $running_processes
${color2}Top CPU:${color}
${top name 1} ${alignr}${top cpu 1}%
${top name 2} ${alignr}${top cpu 2}%
${top name 3} ${alignr}${top cpu 3}%
${color2}Top Memory:${color}
${top_mem name 1} ${alignr}${top_mem mem 1}%
${top_mem name 2} ${alignr}${top_mem mem 2}%
${top_mem name 3} ${alignr}${top_mem mem 3}%
${hr 1}
${if_existing /sys/class/power_supply/BAT0}
${color1}Battery${color}
${battery_short BAT0} - ${battery_time BAT0} ${battery_bar 6 BAT0}
${endif}

${color orange}${voffset 2}${hr 1}
${alignc}${font Dejavu Sans Mono:bold:size=11}${color1}Weather: @@LOCATION@@${font}
${color green}${execpi 600 curl -s "wttr.in/@@LOCATION@@?format=1" --max-time 5 | head -1 || echo "Weather offline"}${color}
${hr 1}
${color2}Weather Details:${color}
${execpi 600 curl -s "wttr.in/@@LOCATION@@?format=%t+%C+%h+%w" --max-time 5 | sed 's/+/ | /g' || echo "Details unavailable"}
${hr 1}
${hr 1}

${color1}${goto 5}Brightness: ${color green}${execpi 10 bash -c '
  # Try different brightness interfaces
  for brightness_path in /sys/class/backlight/*/brightness; do
    if [ -f "$brightness_path" ]; then
      max_path=$(dirname "$brightness_path")/max_brightness
      if [ -f "$max_path" ]; then
        current=$(cat "$brightness_path" 2>/dev/null || echo "0")
        max=$(cat "$max_path" 2>/dev/null || echo "100")
        if [ "$max" -gt 0 ]; then
          percent=$((current * 100 / max))
          echo "${percent}%"
          exit 0
        fi
      fi
    fi
  done
  echo "N/A"
'}${color} ${alignr}${color1}Uptime: ${color green}$uptime_short${color}
${alignc}${font Roboto Mono:bold:size=10}${color2}${time %A, %d %B %Y}
${alignc}${font Roboto Mono:size=16}${color1}${time %H:%M:%S}${font}
