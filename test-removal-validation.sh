#!/bin/bash

echo "üß™ TESTING REMOVAL SCRIPT VALIDATION"
echo "===================================="
echo ""

# Test 1: Dry run validation
echo "üìã Test 1: Dry Run Validation"
echo "-----------------------------"
echo "Testing removal script dry run functionality..."

if ! ./rm-conkyset.sh --dry-run --force; then
    echo "‚ùå Dry run test failed"
    exit 1
fi

echo "‚úÖ Dry run test passed"
echo ""

# Test 2: Check help functionality
echo "üìã Test 2: Help Functionality"
echo "-----------------------------" 
echo "Testing help output..."

if ! ./rm-conkyset.sh --help > /dev/null; then
    echo "‚ùå Help test failed"
    exit 1
fi

echo "‚úÖ Help test passed"
echo ""

# Test 3: Validate file detection
echo "üìã Test 3: File Detection Logic"
echo "-------------------------------"
echo "Creating test files to check detection..."

# Create temporary test environment
TEST_DIR="/tmp/conky_test_$$"
mkdir -p "$TEST_DIR/.config/conky"
mkdir -p "$TEST_DIR/.config/autostart"

# Create test files
touch "$TEST_DIR/.config/conky/conky.conf"
touch "$TEST_DIR/.config/conky/.conky_iface"
touch "$TEST_DIR/.config/autostart/conky.desktop"
touch "$TEST_DIR/conkystartup.sh"
touch "$TEST_DIR/.conky-system-set-skip-version"
touch "$TEST_DIR/.conky-system-set-last-check"

# Create backup files with proper pattern
touch "$TEST_DIR/.config/conky.conf.20241004_120000.backup"
touch "$TEST_DIR/conkystartup.sh.20241004_120000.backup"

echo "‚úÖ Test files created in $TEST_DIR"

# Test 4: Check backup pattern matching
echo ""
echo "üìã Test 4: Backup Pattern Validation"
echo "-----------------------------------"

# Test backup file pattern matching
pattern_test() {
    local file="$1"
    if [[ "$file" =~ \.[0-9]{8}_[0-9]{6}\.backup$ ]]; then
        echo "‚úÖ Pattern match: $file"
        return 0
    else
        echo "‚ùå Pattern failed: $file"
        return 1
    fi
}

pattern_test "file.20241004_120000.backup"
pattern_test "file.20241004_120000.wrong"
pattern_test "file.invalid.backup"

echo ""

# Test 5: Validate argument parsing
echo "üìã Test 5: Argument Parsing"
echo "---------------------------"

test_args() {
    local args="$1"
    local description="$2"
    
    echo "Testing: $description"
    echo "Args: $args"
    
    # Use timeout to prevent hanging on prompts
    if timeout 5s bash -c "./rm-conkyset.sh $args --dry-run --force" > /dev/null 2>&1; then
        echo "‚úÖ Arguments parsed successfully"
    else
        echo "‚ùå Arguments parsing failed"
        return 1
    fi
}

test_args "--dry-run --no-backup" "Dry run without backup"
test_args "--force --no-backup" "Force mode without backup"
test_args "--help" "Help command"

echo ""

# Test 6: Self-removal logic validation
echo "üìã Test 6: Self-Removal Logic"
echo "-----------------------------"

# Check that the script uses safe self-removal
if grep -q "sleep.*rm.*rm-conkyset.sh" rm-conkyset.sh; then
    echo "‚úÖ Safe self-removal mechanism found"
else
    echo "‚ùå Safe self-removal mechanism not found"
fi

echo ""

# Test 7: Check comprehensive file coverage
echo "üìã Test 7: File Coverage Validation"
echo "----------------------------------"

echo "Checking if removal script covers all installation files..."

installation_files=(
    "\$HOME/.config/conky/conky.conf"
    "\$HOME/.config/conky/.conky_iface"
    "\$HOME/.config/autostart/conky.desktop"
    "\$HOME/conkystartup.sh"
    "\$HOME/rm-conkyset.sh"
    "\$HOME/.conky-system-set-skip-version"
    "\$HOME/.conky-system-set-last-check"
)

missing_files=0

for file in "${installation_files[@]}"; do
    if grep -q "$file" rm-conkyset.sh; then
        echo "‚úÖ Coverage found: $file"
    else
        echo "‚ùå Missing coverage: $file"
        ((missing_files++))
    fi
done

if [ $missing_files -eq 0 ]; then
    echo "‚úÖ All installation files covered"
else
    echo "‚ùå $missing_files file(s) not covered in removal script"
fi

echo ""

# Test 8: Validate error handling
echo "üìã Test 8: Error Handling"
echo "-------------------------"

if grep -q "removal_errors" rm-conkyset.sh && \
   grep -q "Failed to remove" rm-conkyset.sh; then
    echo "‚úÖ Error counting and reporting found"
else
    echo "‚ùå Error handling mechanisms not found"
fi

echo ""

# Cleanup test files
rm -rf "$TEST_DIR"

echo "üéØ VALIDATION SUMMARY"
echo "===================="
echo ""
echo "‚úÖ All critical validation tests completed"
echo "‚úÖ Removal script includes comprehensive error handling"
echo "‚úÖ File coverage appears complete"
echo "‚úÖ Safety mechanisms implemented"
echo ""
echo "üõ°Ô∏è  IMPROVED SAFETY FEATURES:"
echo "   ‚Ä¢ Update system files cleanup"
echo "   ‚Ä¢ Backup files detection and removal"
echo "   ‚Ä¢ Intelligent directory handling"
echo "   ‚Ä¢ Safe script self-removal"
echo "   ‚Ä¢ Autostart directory validation"
echo ""
echo "üîß RECOMMENDATIONS:"
echo "   ‚Ä¢ Test the removal script on a test system first"
echo "   ‚Ä¢ Use --dry-run to preview actions"
echo "   ‚Ä¢ Keep backups enabled for safety"
echo ""
echo "‚ú® Removal script validation completed successfully!"